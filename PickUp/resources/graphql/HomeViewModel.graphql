query GetUpcomingEvents {
  events(where: {status: {_in: [open, ip]}, deleted: {_eq: false}}) {
	... EventDetails
  }
}

mutation AcceptFriendRequest($userId: String!) {
  acceptFriendRequest(friendId: $userId) {
	status,
	reason
  }
}

mutation RejectFriendRequest($userId: String!) {
  rejectFriendRequest(friendId: $userId) {
	status,
	reason
  }
}

query GetNotifications($userId: String!) {
  notifications(where: {userId: {_eq: $userId}, status: {_eq: unread}}) {
	id,
	actor {
	  ... UserDetails
	},
	event {
	  ... EventDetails
	},
	createdAt,
	type
  }
}

mutation ReadNotification($notificationId: Int!) {
  markNotificationAsRead(notificationId: $notificationId) {
	status,
	reason
  }
}

mutation JoinEvent($eventId: Int!) {
  joinEvent(eventId: $eventId) {
	reason,
	status
  }
}

mutation AcceptEventInvitation($eventId: Int!) {
  acceptEventInvitation(eventId: $eventId) {
	status,
	reason
  }
}

mutation DeclineEventInvitation($eventId: Int!) {
  declineEventInvitation(eventId: $eventId) {
	status,
	reason
  }
}

mutation EndEvent($input: EndEventInput!) {
  endEvent(input: $input) {
	status,
	reason
  }
}
